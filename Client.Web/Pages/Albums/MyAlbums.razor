@page "/my-albums"

@attribute [Authorize]

@using Client.Web.Pages.Albums.Components
@using Client.Web.Services.ApiHttpService.Models.ModelResponse
@using static Client.Web.Pages.Albums.Components.AlbumComponent

@inject ApiHttpService HttpService
@inject NavigationManager Navigation

<div style="padding: 40px">
    <MudText Typo="Typo.h4" Class="mb-4 font-bold">💿 Мои альбомы</MudText>

    @if (isLoading)
    {
        <div class="flex justify-center items-center" style="height:200px;">
            <MudProgressCircular Indeterminate="true" Color="Color.Primary" Size="Size.Large" />
        </div>
    }
    else if (albums is not null)
    {
        <MudButton Color="Color.Primary" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" OnClick="GoToCreateAlbum" Class="mb-4">
            Новый альбом
        </MudButton>
        <AlbumComponent Albums="albums" />
    }
    else
    {
        <MudText Color="Color.Error">Не удалось загрузить альбомы</MudText>
    }
</div>

@code {
    private List<AlbumModel> albums;
    private bool isLoading = true;

    [Parameter]
    public int ArtistCode { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var response = await HttpService.GetAsync<List<AlbumModel>>($"/api/v1/albums/my");

        if (response.Success)
            albums = response.Data;
        else
            Console.WriteLine(response.ErrorMessage);

        isLoading = false;
    }

    private void GoToCreateAlbum()
    {
        Navigation.NavigateTo("/my-albums/create");
    }

}
