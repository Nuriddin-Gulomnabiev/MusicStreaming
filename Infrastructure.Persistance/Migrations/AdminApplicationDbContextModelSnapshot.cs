// <auto-generated />
using System;
using Infrastructure.Persistance.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace Infrastructure.Persistance.Migrations
{
    [DbContext(typeof(AdminApplicationDbContext))]
    partial class AdminApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Albums.Album", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Code"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fe024194-aad4-462a-8fbd-8dd7b4a2cd90"),
                            Code = 0,
                            IsActive = false,
                            Name = "17",
                            ReleaseDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c7b12644-83a9-4ccd-8418-808b11d9755e"),
                            Code = 0,
                            IsActive = false,
                            Name = "Whole Lotta Red",
                            ReleaseDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("62e05eec-dfed-462d-abfe-7489534fad8b"),
                            Code = 0,
                            IsActive = false,
                            Name = "RED & WHITE",
                            ReleaseDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f7c43f96-79e4-4244-b21b-8ac476e54495"),
                            Code = 0,
                            IsActive = false,
                            Name = "Life Of Pi'erre 5",
                            ReleaseDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Albums.AlbumGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AlbumId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("GenreId");

                    b.ToTable("AlbumGenres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f37179f8-81e6-46a7-9553-eeebc3079f93"),
                            AlbumId = new Guid("62e05eec-dfed-462d-abfe-7489534fad8b"),
                            GenreId = new Guid("ae14797c-31cd-432a-b2de-b3db95a82ab4")
                        },
                        new
                        {
                            Id = new Guid("f92b6d27-6701-44fd-a95d-22440faf8c9b"),
                            AlbumId = new Guid("62e05eec-dfed-462d-abfe-7489534fad8b"),
                            GenreId = new Guid("8745e56f-b335-43fe-bd10-bad6bead0892")
                        },
                        new
                        {
                            Id = new Guid("84f702b7-c750-4143-a09d-a84d6f4b528b"),
                            AlbumId = new Guid("62e05eec-dfed-462d-abfe-7489534fad8b"),
                            GenreId = new Guid("2f044c88-a983-4cf5-bcc1-a5d7764507ed")
                        },
                        new
                        {
                            Id = new Guid("9f433270-b261-4db5-b292-695794f1fb2c"),
                            AlbumId = new Guid("fe024194-aad4-462a-8fbd-8dd7b4a2cd90"),
                            GenreId = new Guid("8745e56f-b335-43fe-bd10-bad6bead0892")
                        },
                        new
                        {
                            Id = new Guid("73055509-0b5e-4c11-b737-d4199ebb317c"),
                            AlbumId = new Guid("fe024194-aad4-462a-8fbd-8dd7b4a2cd90"),
                            GenreId = new Guid("baa56e06-9672-4118-aee3-4098cec4581e")
                        },
                        new
                        {
                            Id = new Guid("8d86c4a7-9cbc-48bd-a119-6416775d4347"),
                            AlbumId = new Guid("fe024194-aad4-462a-8fbd-8dd7b4a2cd90"),
                            GenreId = new Guid("e2a8929f-2190-4329-bae1-83b170a3677f")
                        },
                        new
                        {
                            Id = new Guid("e559f1a6-f2cb-4e98-95a4-7445413322d9"),
                            AlbumId = new Guid("c7b12644-83a9-4ccd-8418-808b11d9755e"),
                            GenreId = new Guid("ae14797c-31cd-432a-b2de-b3db95a82ab4")
                        },
                        new
                        {
                            Id = new Guid("c1be9843-74b6-455a-9c98-d17edcb6adf0"),
                            AlbumId = new Guid("c7b12644-83a9-4ccd-8418-808b11d9755e"),
                            GenreId = new Guid("8745e56f-b335-43fe-bd10-bad6bead0892")
                        },
                        new
                        {
                            Id = new Guid("1aa4b453-910f-472e-a2f4-aa0b37c43da0"),
                            AlbumId = new Guid("f7c43f96-79e4-4244-b21b-8ac476e54495"),
                            GenreId = new Guid("8745e56f-b335-43fe-bd10-bad6bead0892")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Artists.Artist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Code"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c878736d-da07-4401-ab27-2743d4e035c5"),
                            Code = 0,
                            IsActive = false,
                            Name = "XXXtentacion"
                        },
                        new
                        {
                            Id = new Guid("a62f20f1-a42d-41cb-8c17-890cc61b4b14"),
                            Code = 0,
                            IsActive = false,
                            Name = "Playboi Carti"
                        },
                        new
                        {
                            Id = new Guid("03810320-12e9-435f-9d8b-473572074360"),
                            Code = 0,
                            IsActive = false,
                            Name = "Lil Uzi Vert"
                        },
                        new
                        {
                            Id = new Guid("d3179697-703d-4ee8-998d-7674119309a5"),
                            Code = 0,
                            IsActive = false,
                            Name = "Pi'erre Bourne"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Artists.ArtistAlbum", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AlbumId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ArtistId");

                    b.ToTable("ArtistAlbums");

                    b.HasData(
                        new
                        {
                            Id = new Guid("197eb987-b01a-46c6-af84-9887f53eb28f"),
                            AlbumId = new Guid("fe024194-aad4-462a-8fbd-8dd7b4a2cd90"),
                            ArtistId = new Guid("c878736d-da07-4401-ab27-2743d4e035c5")
                        },
                        new
                        {
                            Id = new Guid("680e53f6-7a90-440c-ba67-37a63196306b"),
                            AlbumId = new Guid("c7b12644-83a9-4ccd-8418-808b11d9755e"),
                            ArtistId = new Guid("a62f20f1-a42d-41cb-8c17-890cc61b4b14")
                        },
                        new
                        {
                            Id = new Guid("2bc3a501-1cee-45d8-810b-becb146292b3"),
                            AlbumId = new Guid("62e05eec-dfed-462d-abfe-7489534fad8b"),
                            ArtistId = new Guid("03810320-12e9-435f-9d8b-473572074360")
                        },
                        new
                        {
                            Id = new Guid("a93fc435-17a1-4322-aea6-497b2cca341c"),
                            AlbumId = new Guid("f7c43f96-79e4-4244-b21b-8ac476e54495"),
                            ArtistId = new Guid("d3179697-703d-4ee8-998d-7674119309a5")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Artists.ArtistTrack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("TrackId");

                    b.ToTable("ArtistTracks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10dc748b-47a1-412e-843f-e18e34bafa79"),
                            ArtistId = new Guid("c878736d-da07-4401-ab27-2743d4e035c5"),
                            TrackId = new Guid("8366834f-0278-46e2-8142-011813bda329")
                        },
                        new
                        {
                            Id = new Guid("fa272a3c-33a7-465a-95e1-9a6dcd6f015c"),
                            ArtistId = new Guid("c878736d-da07-4401-ab27-2743d4e035c5"),
                            TrackId = new Guid("533b7e3d-9cfd-4731-8dda-a1d5a86ff80a")
                        },
                        new
                        {
                            Id = new Guid("7e2fd2dd-24f3-4cfb-9695-dcdaa91731c2"),
                            ArtistId = new Guid("c878736d-da07-4401-ab27-2743d4e035c5"),
                            TrackId = new Guid("1afe4a9e-7121-4b34-89a6-8db6e0b6ddad")
                        },
                        new
                        {
                            Id = new Guid("de25dd37-a411-44cd-8924-5f34fcbc5b54"),
                            ArtistId = new Guid("c878736d-da07-4401-ab27-2743d4e035c5"),
                            TrackId = new Guid("f0c1326b-0646-46f4-966f-c10caa9c931b")
                        },
                        new
                        {
                            Id = new Guid("f72379f0-d8cb-4b21-935d-1ec35b8d4fe4"),
                            ArtistId = new Guid("c878736d-da07-4401-ab27-2743d4e035c5"),
                            TrackId = new Guid("492f70ab-f1de-4de4-93b3-8602df66b05a")
                        },
                        new
                        {
                            Id = new Guid("6fcc262a-69ea-425a-a73b-cb457f3cf67c"),
                            ArtistId = new Guid("c878736d-da07-4401-ab27-2743d4e035c5"),
                            TrackId = new Guid("baace2ca-c2c0-4cee-b129-53079d696059")
                        },
                        new
                        {
                            Id = new Guid("0280e933-4523-4073-9d47-26f7a6b05a14"),
                            ArtistId = new Guid("c878736d-da07-4401-ab27-2743d4e035c5"),
                            TrackId = new Guid("84d5050b-a7b7-4c23-a2d1-93281183264a")
                        },
                        new
                        {
                            Id = new Guid("53aacaa7-d274-4531-81d3-6777c46cff21"),
                            ArtistId = new Guid("c878736d-da07-4401-ab27-2743d4e035c5"),
                            TrackId = new Guid("6d342342-ea26-40f4-aa92-420f3a943603")
                        },
                        new
                        {
                            Id = new Guid("0b19db21-ec04-4590-9884-eecad9e52f8d"),
                            ArtistId = new Guid("c878736d-da07-4401-ab27-2743d4e035c5"),
                            TrackId = new Guid("8e22b0a3-063e-40ae-976e-5b06f762c8ce")
                        },
                        new
                        {
                            Id = new Guid("a6c67bc3-3381-47fa-bfc8-a0f192a51b4c"),
                            ArtistId = new Guid("c878736d-da07-4401-ab27-2743d4e035c5"),
                            TrackId = new Guid("77b75ed9-e6d2-4d47-84c9-58af10e455c1")
                        },
                        new
                        {
                            Id = new Guid("b746d17b-aa44-409a-91b1-cccdb08e5d21"),
                            ArtistId = new Guid("c878736d-da07-4401-ab27-2743d4e035c5"),
                            TrackId = new Guid("7fdfa190-66d6-43be-b2af-dbbd45052828")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Genres.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AlbumId")
                        .HasColumnType("uuid");

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Code"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae14797c-31cd-432a-b2de-b3db95a82ab4"),
                            Code = 0,
                            IsActive = false,
                            Name = "Трэп"
                        },
                        new
                        {
                            Id = new Guid("8745e56f-b335-43fe-bd10-bad6bead0892"),
                            Code = 0,
                            IsActive = false,
                            Name = "Хип-Хоп"
                        },
                        new
                        {
                            Id = new Guid("baa56e06-9672-4118-aee3-4098cec4581e"),
                            Code = 0,
                            IsActive = false,
                            Name = "Эмо"
                        },
                        new
                        {
                            Id = new Guid("2f044c88-a983-4cf5-bcc1-a5d7764507ed"),
                            Code = 0,
                            IsActive = false,
                            Name = "Клауд-рэп"
                        },
                        new
                        {
                            Id = new Guid("e2a8929f-2190-4329-bae1-83b170a3677f"),
                            Code = 0,
                            IsActive = false,
                            Name = "Альтернативный рок"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Tracks.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AlbumId")
                        .HasColumnType("uuid");

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Code"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Track");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8366834f-0278-46e2-8142-011813bda329"),
                            AlbumId = new Guid("fe024194-aad4-462a-8fbd-8dd7b4a2cd90"),
                            Code = 0,
                            IsActive = false,
                            Name = "The Explanation"
                        },
                        new
                        {
                            Id = new Guid("533b7e3d-9cfd-4731-8dda-a1d5a86ff80a"),
                            AlbumId = new Guid("fe024194-aad4-462a-8fbd-8dd7b4a2cd90"),
                            Code = 0,
                            IsActive = false,
                            Name = "Jocelyn Flores"
                        },
                        new
                        {
                            Id = new Guid("1afe4a9e-7121-4b34-89a6-8db6e0b6ddad"),
                            AlbumId = new Guid("fe024194-aad4-462a-8fbd-8dd7b4a2cd90"),
                            Code = 0,
                            IsActive = false,
                            Name = "Depression & Obsession"
                        },
                        new
                        {
                            Id = new Guid("f0c1326b-0646-46f4-966f-c10caa9c931b"),
                            AlbumId = new Guid("fe024194-aad4-462a-8fbd-8dd7b4a2cd90"),
                            Code = 0,
                            IsActive = false,
                            Name = "Everybody Dies In Their Nightmares"
                        },
                        new
                        {
                            Id = new Guid("492f70ab-f1de-4de4-93b3-8602df66b05a"),
                            AlbumId = new Guid("fe024194-aad4-462a-8fbd-8dd7b4a2cd90"),
                            Code = 0,
                            IsActive = false,
                            Name = "Revenge"
                        },
                        new
                        {
                            Id = new Guid("baace2ca-c2c0-4cee-b129-53079d696059"),
                            AlbumId = new Guid("fe024194-aad4-462a-8fbd-8dd7b4a2cd90"),
                            Code = 0,
                            IsActive = false,
                            Name = "Save Me"
                        },
                        new
                        {
                            Id = new Guid("84d5050b-a7b7-4c23-a2d1-93281183264a"),
                            AlbumId = new Guid("fe024194-aad4-462a-8fbd-8dd7b4a2cd90"),
                            Code = 0,
                            IsActive = false,
                            Name = "Dead Inside (Interlude)"
                        },
                        new
                        {
                            Id = new Guid("6d342342-ea26-40f4-aa92-420f3a943603"),
                            AlbumId = new Guid("fe024194-aad4-462a-8fbd-8dd7b4a2cd90"),
                            Code = 0,
                            IsActive = false,
                            Name = "Fuck Love feat. Trippie Redd"
                        },
                        new
                        {
                            Id = new Guid("8e22b0a3-063e-40ae-976e-5b06f762c8ce"),
                            AlbumId = new Guid("fe024194-aad4-462a-8fbd-8dd7b4a2cd90"),
                            Code = 0,
                            IsActive = false,
                            Name = "Carry On"
                        },
                        new
                        {
                            Id = new Guid("77b75ed9-e6d2-4d47-84c9-58af10e455c1"),
                            AlbumId = new Guid("fe024194-aad4-462a-8fbd-8dd7b4a2cd90"),
                            Code = 0,
                            IsActive = false,
                            Name = "Orlando"
                        },
                        new
                        {
                            Id = new Guid("7fdfa190-66d6-43be-b2af-dbbd45052828"),
                            AlbumId = new Guid("fe024194-aad4-462a-8fbd-8dd7b4a2cd90"),
                            Code = 0,
                            IsActive = false,
                            Name = "Ayala (Outro)"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Albums.AlbumGenre", b =>
                {
                    b.HasOne("Domain.Entities.Albums.Album", "Album")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Genres.Genre", "Genre")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Domain.Entities.Artists.ArtistAlbum", b =>
                {
                    b.HasOne("Domain.Entities.Albums.Album", "Album")
                        .WithMany("ArtistAlbums")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Artists.Artist", "Artist")
                        .WithMany("ArtistAlbums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("Domain.Entities.Artists.ArtistTrack", b =>
                {
                    b.HasOne("Domain.Entities.Artists.Artist", "Artist")
                        .WithMany("ArtistTracks")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Tracks.Track", "Track")
                        .WithMany("ArtistTracks")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("Domain.Entities.Genres.Genre", b =>
                {
                    b.HasOne("Domain.Entities.Albums.Album", null)
                        .WithMany("Genres")
                        .HasForeignKey("AlbumId");
                });

            modelBuilder.Entity("Domain.Entities.Tracks.Track", b =>
                {
                    b.HasOne("Domain.Entities.Albums.Album", "Album")
                        .WithMany("Tracks")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("Domain.Entities.Albums.Album", b =>
                {
                    b.Navigation("AlbumGenres");

                    b.Navigation("ArtistAlbums");

                    b.Navigation("Genres");

                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("Domain.Entities.Artists.Artist", b =>
                {
                    b.Navigation("ArtistAlbums");

                    b.Navigation("ArtistTracks");
                });

            modelBuilder.Entity("Domain.Entities.Genres.Genre", b =>
                {
                    b.Navigation("AlbumGenres");
                });

            modelBuilder.Entity("Domain.Entities.Tracks.Track", b =>
                {
                    b.Navigation("ArtistTracks");
                });
#pragma warning restore 612, 618
        }
    }
}
